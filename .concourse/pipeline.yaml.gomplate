
{{/* list of repositories and output images */}}

{{ $repos := slice "eirini-loggregator-bridge" "eirini-persi" "eirini-persi-broker" "eirini-ssh" "eirinix-helm-release" }}
{{ $images := slice "loggregator-bridge" "persi" "persi-broker" "persi-broker-setup" "ssh" "ssh-proxy-setup" }}

{{/* configure default values */}}

{{/* $.docker */}}
{{ $ = dict | dict "docker" | merge $ }}
{{/* .docker.org */}}
{{ $ = merge (index $.docker "org" | default "splatform" | dict "org" | dict "docker") $ }}
{{/* .git */}}
{{ $ = dict | dict "git" | merge $ }}
{{/* .git.user */}}
{{ $ = merge (index $.git "user" | default "SUSE CFCIBot" | dict "user" | dict "git") $ }}
{{/* .git.email */}}
{{ $ = merge (index $.git "email" | default "cf-ci-bot@suse.de" | dict "email" | dict "git") $ }}
{{/* .repos */}}
{{ $ = dict | dict "repos" | merge $ }}
{{/* .repos.trigger */}}
{{ $ = merge (index $.repos "trigger" | default true | dict "trigger" | dict "repos") $ }}
{{/* .repos.org */}}
{{ $ = merge (index $.repos "org" | default "SUSE" | dict "org" | dict "repos") $ }}
{{/* .repos.<repo> */}}
{{ range $repos }}
{{ $ = merge (index $.repos . | default (printf "%s/%s" $.repos.org .) | dict . | dict "repos") $ }}
{{ end }}

{{/* This template builds a go binary from source */}}
{{/* Requires `.repo`, `.image`, and `.subdir` keys */}}
{{/* Optionally, `.docker-path` can be used to locate the Dockerfile. */}}
{{ define "build-image" }}
- name: {{ $.image }}
  plan:
  - get: git.{{ $.repo }}
    trigger: {{ $.repos.trigger }}
    version: every
  - task: get-version
    config:
      platform: linux
      image_resource:
        type: registry-image
        source: { repository: golang }
      inputs:
      - name: git.{{ $.repo }}
        path: src
      outputs:
      - name: tag
      params:
        GIT_AUTHOR_NAME: {{ $.git.user }}
        GIT_AUTHOR_EMAIL: {{ $.git.email }}
      run:
        path: /bin/sh
        args:
        - -c
        - >
          git config --global user.name  $GIT_AUTHOR_NAME ;
          git config --global user.email $GIT_AUTHOR_EMAIL ;
          (
            cd src ;
            if [ -r bin/include/versioning ] ; then
              . bin/include/versioning ;
              echo $VERSION_TAG ;
            else
              git describe --tags --long --always ;
            fi
          ) > tag/tag.txt ;
          cat tag/tag.txt ;
  - put: docker.{{ $.image }}
    params:
      build: git.{{ $.repo }}/{{ index . "docker-path" | default "" }}
      build_args:
        USER: {{ $.git.user }}
        EMAIL: {{ $.git.email }}
        # BASE_IMAGE: scratch # FIXME: images are missing /tmp folder, which makes extensions to crash
      tag_file: tag/tag.txt
{{ end }}

groups:
- name: chart
  jobs: [ package-base, chart ]
- name: logging
  jobs: [ loggregator-bridge ]
- name: persi
  jobs: [ persi, persi-broker, persi-broker-setup ]
- name: ssh
  jobs: [ ssh, ssh-proxy-setup ]

resources:
# source GitHub repositories
{{ range $repos }}
- name: git.{{ . }}
  type: git
  source:
    branch: master
    uri: https://github.com/{{ index $.repos . }}
{{ end }}

# Docker image outputs
{{ range $images }}
- name: docker.{{ . }}
  type: docker-image
  source:
    repository: {{ $.docker.org }}/eirinix-{{ . }}
    username:   ((docker-username))
    password:   ((docker-password))
{{ end }}
- name: docker.base
  type: docker-image
  source:
    repository: opensuse/leap
    tag:        15.2
- name: docker.package-base
  type: docker-image
  source:
    repository: {{ $.docker.org }}/eirinix-package-base
    username:   ((docker-username))
    password:   ((docker-password))

jobs:
# group logging
{{ template "build-image" (dict "repo" "eirini-loggregator-bridge" "image" "loggregator-bridge" | merge $) }}

# group persi
{{ template "build-image" (dict "repo" "eirini-persi" "image" "persi" | merge $) }}
{{ template "build-image" (dict "repo" "eirini-persi-broker" "image" "persi-broker" | merge $) }}
{{ template "build-image" (dict "repo" "eirinix-helm-release" "image" "persi-broker-setup" "docker-path" "images/persi-broker-setup") | merge $ }}

# group ssh
{{ template "build-image" (dict "repo" "eirini-ssh" "image" "ssh" | merge $) }}
{{ template "build-image" (dict "repo" "eirinix-helm-release" "image" "ssh-proxy-setup" "docker-path" "images/ssh-proxy-setup") | merge $ }}

# group chart
- name: package-base
  plan:
  - get: docker.base
    trigger: {{ $.repos.trigger }}
  - task: dockerfile
    config:
      platform: linux
      outputs:
      - name: dockerfile
      run:
        path: /bin/sh
        args:
        - -c
        - echo "${CONTENTS}" > dockerfile/Dockerfile
      params:
        CONTENTS: |
          FROM opensuse/leap:15.2
          RUN true \
            && zypper --non-interactive install \
              helm \
              python3-yq \
            && zypper --non-interactive clean
    image: docker.base
  - put: docker.package-base
    params:
      build: dockerfile
- name: chart
  plan:
  - in_parallel:
    {{- range $images }}
    - get: docker.{{ . }}
      params:
        skip_download: true
    {{- end }}
    - get: docker.package-base
    - get: git.eirinix-helm-release
      trigger: {{ $.repos.trigger }}
  - task: build
    config:
      platform: linux
      inputs:
      - name: git.eirinix-helm-release
      outputs:
      - name: output
      run:
        path: /bin/sh
        args:
        - -c
        - >
          helm package git.eirinix-helm-release/chart
          --destination output
    image: docker.package-base
    params:
      {{- range $images }}
      TAG_FILE_{{ . | strings.SnakeCase | toUpper }}: docker.{{ . }}/tag
      {{- end }}
